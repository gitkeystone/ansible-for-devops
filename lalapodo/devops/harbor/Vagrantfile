# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  if Vagrant.has_plugin?("vagrant-proxyconf")
    # 若安装了plugin，则设置代理信息
    config.proxy.http     = "http://192.168.1.2:7890/"
    config.proxy.https    = "http://192.168.1.2:7890/"
    config.proxy.no_proxy = "localhost,127.0.0.1,.example.com,192.168.1.0/24"
  else
    # 若没有安装plugin，则调用系统命令安装插件，并提示重运行命令
    system('vagrant plugin install vagrant-proxyconf')
    raise("vagrant-proxyconf installed. Run command again.");
  end

  config.vm.box = "geerlingguy/ubuntu2004"
  config.vm.hostname = "harbor"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.insert_key = false

  # config.vm.network :private_network, ip: "192.168.137.20"
  config.vm.network "public_network", ip: "192.168.1.23", bridge: "enp6s0"

  config.vm.provider :virtualbox do |v|
    v.cpus = 2
    v.memory = 4096
  end

  # Ansible provisioning.
  config.vm.provision "ansible" do |ansible|
    ansible.compatibility_mode = "2.0"

    ansible.playbook = "provision.yml"
    ansible.become = true
  end
end



